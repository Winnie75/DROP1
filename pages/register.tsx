import Head from "next/head";
import styles from '../styles/Home.module.css'
import {useState} from "react";
import NextLink from "next/link";
import {useAuth} from "../context/AuthContext";
import {useRouter} from "next/navigation";
import {ProtectedRoute} from "../components/ProtectedRoute/ProtectedRoute";
import {
    Flex,
    Box,
    FormControl,
    FormLabel,
    Input,
    InputGroup,
    InputRightElement,
    Stack,
    Button,
    Heading,
    Text,
    useColorModeValue,
    Link
} from '@chakra-ui/react';
import { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';
import {GetServerSidePropsContext} from "next";

export default function Register({reqEmail}: {reqEmail: string}) {

    const router = useRouter();
    const [email, setEmail] = useState(reqEmail || '');
    const [password, setPassword] = useState("");
    const [password2, setPassword2] = useState("");
    const [error, setError] = useState("");

    const {register} = useAuth();
    const handleRegister = async (e: any) => {
        e.preventDefault();
        setError("");

        try {
            await register(email, password);
            router.push('/');

        } catch (e) {
            console.log(e);
            setError('Failed to create an account, please try again or contact support');
        }

    };

    const [showPassword, setShowPassword] = useState(false);
    return (
        <ProtectedRoute type={'onlyGuest'}>

            <div>
                <Head>
                    <title>Qr id | Register</title>
                    <meta name="description" content="Generated by create next app"/>
                    <link rel="icon" href="/favicon.ico"/>
                </Head>

                <main className={styles.main}>

                    <Flex
                        align={'center'}
                        justify={'center'}
                        bg={useColorModeValue('gray.50', 'gray.800')}>
                        <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>
                            <Stack align={'center'}>
                                <Heading fontSize={{sm: 'xl', md: '4xl'}} textAlign={'center'}>
                                    Sign up
                                </Heading>
                                <Text fontSize={{sm: 'sm',md: 'lg'}} color={'gray.600'}>
                                    to manage your reshrd items ✌️
                                </Text>
                            </Stack>

                            <Box
                                rounded={'lg'}
                                bg={useColorModeValue('white', 'gray.700')}
                                boxShadow={'lg'}
                                p={8}>
                                <Stack spacing={4} width={{sm: '300px', md: '400px'}}>
                                    <FormControl id="email" isRequired>
                                        <FormLabel>Email address</FormLabel>
                                        <Input value={email} onChange={e => setEmail(e.target.value)} type="email" />
                                    </FormControl>

                                    <FormControl id="password" isRequired>
                                        <FormLabel>Password</FormLabel>
                                        <InputGroup>
                                            <Input type={showPassword ? 'text' : 'password'} value={password} onChange={e => setPassword(e.target.value)} />
                                            <InputRightElement h={'full'}>
                                                <Button
                                                    variant={'ghost'}
                                                    onClick={() =>
                                                        setShowPassword((showPassword) => !showPassword)
                                                    }>
                                                    {showPassword ? <ViewIcon /> : <ViewOffIcon />}
                                                </Button>
                                            </InputRightElement>
                                        </InputGroup>
                                    </FormControl>

                                    <FormControl id="password2" isRequired>
                                        <FormLabel>Repeat password</FormLabel>
                                        <InputGroup>
                                            <Input type={showPassword ? 'text' : 'password'} value={password2} onChange={e => setPassword2(e.target.value)} />
                                            <InputRightElement h={'full'}>
                                                <Button
                                                    variant={'ghost'}
                                                    onClick={() =>
                                                        setShowPassword((showPassword) => !showPassword)
                                                    }>
                                                    {showPassword ? <ViewIcon /> : <ViewOffIcon />}
                                                </Button>
                                            </InputRightElement>
                                        </InputGroup>
                                    </FormControl>

                                    <Stack spacing={10} pt={2}>
                                        <Button
                                            loadingText="Submitting"
                                            size="lg"
                                            bg={'blue.400'}
                                            color={'white'}
                                            _hover={{
                                                bg: 'blue.500',
                                            }}
                                            onClick={handleRegister}
                                        >
                                            Sign up
                                        </Button>
                                    </Stack>

                                    <Stack pt={6}>
                                        <Text align={'center'}>
                                            Already a user? <Link as={NextLink} href={'/login'} color={'blue.400'}>Login</Link>
                                        </Text>
                                    </Stack>
                                </Stack>
                            </Box>
                        </Stack>
                    </Flex>
                </main>

            </div>
        </ProtectedRoute>
    );
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
    const email = context.query.email
    return {
        props: {
           reqEmail: email
        },
    }
}